{"version":3,"file":"6646.render-page.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACwd,QAAQ,yCAAW,yCAAyC,QAAQ,kBAAkB,yBAAyB,KAAK,SAAS,uBAAuB,eAAe,kBAAkB,mBAAmB,mDAAmD,mCAAC,mCAAmC,QAAQ,2CAAC,0DAA0D,oBAAoB,aAAa,uBAAuB,oCAAoC,YAAY,wDAAwD,OAAO,wCAAC,gBAAgB,eAAe,wDAAwD,GAAG,wBAAC,gBAAgB,sBAAsB,yBAAyB,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,EAAE,kEAAkE,IAAI,IAAI,IAAI,sCAAsC,EAAE,qBAAqB,kCAAkC,kBAAkB,mBAAmB,MAAM,0IAA0I,yBAAyB,MAAM,6BAA6B,MAAM,YAAY,iBAAiB,oBAAoB,aAAa,YAAY,uBAAuB,KAAK,yBAAyB,qLAAqL,iBAAiB,mCAAC,CAAC,iCAAC,2CAA2C,aAAa,uBAAuB,oCAAoC,eAAe,wDAAwD,kBAAkB,sEAAsE,kEAAkE,IAAI,IAAI,IAAI,gDAAgD,gBAAgB,gCAAgC,kBAAkB,eAAe,qBAAqB,MAAM,wBAAwB,MAAM,0BAA0B,SAAS,gBAAgB,GAAG,wBAAC,gBAAgB,2BAA2B,wBAAwB,QAAQ,oCAAC,MAAM,qEAAqE,OAAO,iDAAiD,OAAO,MAAM,kBAAkB,IAAI,0BAAC,qBAAqB,kBAAkB,sCAAsC,wBAAwB,YAAY,iBAAiB,KAAK,gCAAgC,YAAY,WAAW,KAAK,oBAAoB,sCAAsC,0BAAC,sBAAsB,UAAU,kBAAkB,sCAAsC,wBAAwB,YAAY,kBAAkB,KAAK,kCAAkC,sCAAsC,0BAAC,qBAAqB,UAAU,YAAY,oBAAC,IAAI,YAAoI;;;ACJp2G;AACA;AACA;AACA;AACyD,MAAM,eAAC,CAAC,sBAAsB,eAAe,wBAAC,KAAK,iBAAiB,kBAAkB,mLAAmL,YAAY,GAAG,wBAAC,0BAA0B,MAAM,kEAAkE,kIAAkI,+BAA+B,wBAAwB,+BAA+B,kBAAkB,qBAA6D;;;ACJ3tB;AACA;AACA;AACA;AACitB,QAAQ,sBAAsB,uFAAuF,oBAAC,+GAA+G,QAAQ,gBAAC,iBAAiB,SAAS,8BAA8B,SAAS,GAAG,gBAAC,0BAA0B,6EAA6E,+DAA+D,mBAAmB,gBAAgB,oBAAC,qGAAqG,sBAAsB,gBAAC,0EAA0E,oBAAC,qHAAqH,SAAS,GAAG,gBAAC,MAAM,4CAA4C,qBAAqB,SAAS,qLAAqL,2BAA2B,gBAAgB,oBAAC,qGAAqG,mCAAmC,oBAAC,iEAAiE,SAAS,GAAG,gBAAC,OAAO,kCAAkC,8BAA8B,uFAAuF,oBAAC,+GAA+G,mCAAmC,oBAAC,iEAAiE,SAAS,GAAG,gBAAC,0BAA0B,gDAAgD,+CAA+C,8BAA8B,iBAAiB,cAAc,SAAS,EAAE,yDAAyD,oBAAoB,2CAAC,GAAG,gBAAgB,GAAG,SAAS,IAAI,8BAAC,OAAO,uBAAuB,gFAAgF,CAAC,0DAA0D,yCAAyC,8BAA8B,2BAA2B,qCAAC,8DAA8D,kCAAkC,4CAA4C,CAAC,kBAAkB,+CAA+C,+BAA+B,mDAAmD,YAAY,WAAW,KAAK,wBAAwB,6EAA6E,oCAAoC,kEAAkE,0BAA0B,+FAA+F,iCAAiC,8BAA8B,SAAS,yGAAyG,iHAAiH,iCAAiC,KAAK,uCAAuC,MAAM,0CAA0C,gBAAgB,gBAAC,+BAA+B,2CAAC,GAAG,iCAAiC,GAAG,SAAS,IAAI,8BAAC,oBAAoB,oBAAC,4EAA4E,wBAAwB,gCAAgC,OAAO,IAAI,WAAW,gBAAC,iBAAiB,wBAAwB,gCAAgC,sHAAsH,6EAA6E,KAAK,wBAAwB,oBAAC,2EAA2E,EAAE,sDAAsD,kCAAkC,gCAAgC,GAAG,wBAAC,4BAA4B,YAAY,eAAC,OAAO,yDAAyD,2BAA2B,oCAAoC,kBAAkB,8DAA8D,GAAG,iCAAiC,6FAA6F,sBAAsB,uCAAuC,UAAU,2CAAC,qBAAqB,oBAAoB,YAAY,gBAAgB,KAAK,kBAAkB,6DAA6D,SAAS,wCAAwC,uDAAuD,iDAAiD,4CAA4C,gBAAgB,oCAAoC,6CAA6C,IAAI,WAAW,oCAAC,gEAAgE,SAAS,QAAQ,gHAAgH,oBAAC,0CAA0C,SAAS,0CAAC,wDAAwD,mCAAmC,gCAAgC,8DAA8D,WAAW,YAAY,GAAG,KAAK,GAAG,EAAE,IAAI,wBAAC,oBAAoB,wBAAC,mDAAmD,uBAAuB,EAAE,wBAAC,4BAA4B,eAAC,MAAM,GAAG,MAAM,oCAAC,CAAC,mCAAC,mCAAmC,4BAA4B,sEAAsE,6BAA6B,wDAAwD,gCAAgC,oBAAoB,SAAS,mCAAmC,iCAAC,GAAG,SAAS,6BAAC,oDAAoD,SAAS,GAAG,UAAU,0CAAC,oBAAoB,GAAG,MAAM,oCAAC,mCAAmC,kCAAkC,yBAAyB,QAAQ,UAAU,OAAO,oCAAoC,OAAO,gBAAgB,wCAAwC,0BAA0B,SAAS,KAAK,mCAAmC,4EAA4E,QAAQ,GAAG,0BAA0B,uDAAuD,wDAAwD,4CAA4C,yBAAyB,wCAAwC,SAAS,8BAA8B,2BAA2B,uDAAuD,gCAAgC,oCAAoC,wBAAwB,4BAA4B,MAAM,0BAA0B,wBAAC,6BAA6B,MAAM,GAAG,sBAAsB,2BAA2B,2CAAC,qBAAqB,uCAAuC,SAAS,2DAA2D,mDAAmD,OAAO,iBAAiB,IAAI,MAAM,gBAAC,CAAC,SAAS,8DAA8D,SAAS,YAAY,gBAAC,CAAC,2KAA2K,mBAAmB,uDAAuD,MAAM,2CAAC,GAAG,oCAAoC,GAAG,SAAS,EAAE,YAAY,yBAAC,EAAE,mFAAmF,IAAI,8BAAC,MAAM,kBAAkB,sCAAsC,+CAA+C,2BAA2B,mBAAmB,8BAA8B,oBAAoB,OAAO,sDAAsD,uBAAuB,YAAY,gBAAC,CAAC,mEAAmE,gBAAC,iFAAiF,mBAAmB,+BAA+B,oBAAoB,aAAa,WAAW,cAAc,GAAG,qBAAqB,wBAAwB,MAAM,kBAAkB,MAAM,kBAAkB,IAAI,YAAY,gCAAgC,oBAAC,oCAAoC,oBAAC,yBAAyB,MAAM,kBAAkB,WAAW,cAAc,GAAG,sCAAsC,4BAA4B,yBAAyB,qBAAqB,yBAAyB,qBAAqB,uBAAuB,cAAc,kCAAkC,yBAAC,EAAE,uEAAuE,MAAM,yBAAC,8BAA8B,MAAM,gBAAgB,qBAAqB,cAAc,GAAG,QAAQ,2FAA2F,4BAA4B,EAAE,mCAAmC,qBAAqB,EAAE,mCAAmC,qBAAqB,EAAE,8BAA8B,cAAc,EAAE,oCAAoC,wGAAwG,WAAW,uBAAC,EAAE,+CAA+C,GAAG,OAAO,UAAU,MAAM,gBAAC,CAAC,iBAAiB,6BAA6B,gBAAgB,gBAAC,CAAC,mBAAmB,2DAA2D,oBAAoB,2DAA2D,KAAK,8CAA8C,uCAAuC,2BAA2B,IAAI,2BAA2B,6DAA6D,sBAAsB,0GAA0G,0BAA0B,kGAAkG,cAAc,6DAA6D,kBAAkB,UAAU,MAAM,0CAA0C,eAAe,yDAAyD,SAAS,sBAAsB,gGAAgG,gBAAgB,gBAAC,CAAC,qBAAqB,uKAAuK,sBAAsB,uDAAuD,+EAA+E,0BAA0B,4BAA4B,6BAA6B,oBAAoB,GAAG,wBAAC,aAAa,0BAA0B,KAAK,KAAK,oEAAoE,0DAA0D,SAAS,2BAA2B,+DAA+D,sBAAsB,4DAA4D,0BAA0B,oCAAoC,gBAAgB,gEAAgE,cAAc,2FAA2F,kBAAkB,2BAA2B,wBAAwB,4BAA4B,sCAAsC,sDAAsD,SAAS,sDAAsD,8EAA8E,gCAAgC,UAAU,MAAM,uDAAuD,yCAAyC,yBAAyB,YAAY,IAAI,OAAO,mCAAC,yCAAyC,SAAS,GAAG,yCAAyC,6BAA6B,oBAAoB,GAAG,wBAAC,WAAW,oMAAoM,YAAY,IAAI,gBAAgB,IAAI,KAAK,SAAS,+CAA+C,wEAAwE,iBAAiB,oDAAoD,mCAAC,gBAAgB,gBAAgB,sBAAsB,QAAQ,8CAA8C,uBAAuB,SAAS,MAAM,gBAAC,EAAE,sGAA8L","sources":["webpack://energy-and-water-dashboard/./node_modules/@arcgis/core/layers/support/ElevationSampler.js","webpack://energy-and-water-dashboard/./node_modules/@arcgis/core/layers/support/ElevationTile.js","webpack://energy-and-water-dashboard/./node_modules/@arcgis/core/layers/support/ElevationQuery.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import\"../../core/has.js\";import e from\"../../core/Logger.js\";import{isNone as t,unwrapOr as n}from\"../../core/maybe.js\";import{getMetersPerUnitForSR as s}from\"../../core/unitUtils.js\";import{toExtent as i,create as o}from\"../../geometry/support/aaBoundingRect.js\";import{extentContainsPoint as r}from\"../../geometry/support/contains.js\";import{project as a}from\"../../geometry/support/webMercatorUtils.js\";import l from\"../../geometry/Point.js\";const c=e.getLogger(\"esri.layers.support.ElevationSampler\");class m{queryElevation(e){return h(e.clone(),this)}on(){return g}projectIfRequired(e,t){return f(e,t)}}class p extends m{constructor(e,t,n){super(),this.tile=e,this.noDataValue=n,this.extent=i(e.tile.extent,t.spatialReference);const o=s(t.spatialReference),r=t.lodAt(e.tile.level).resolution*o;this.demResolution={min:r,max:r}}get spatialReference(){return this.extent.spatialReference}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return r(this.extent,t)}elevationAt(e){const n=this.projectIfRequired(e,this.spatialReference);if(t(n))return null;if(!this.contains(e)){const t=this.extent,n=`${t.xmin}, ${t.ymin}, ${t.xmax}, ${t.ymax}`;return c.warn(\"#elevationAt()\",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler extent (${n})`),this.noDataValue}return this.tile.sample(n.x,n.y)}}class u extends m{constructor(e,t,n){let s;super(),\"number\"==typeof t?(this.noDataValue=t,s=null):(s=t,this.noDataValue=n),this.samplers=s?e.map((e=>new p(e,s,this.noDataValue))):e;const r=this.samplers[0];if(r){this.extent=r.extent.clone();const{min:e,max:t}=r.demResolution;this.demResolution={min:e,max:t};for(let n=1;n<this.samplers.length;n++){const e=this.samplers[n];this.extent.union(e.extent),this.demResolution.min=Math.min(this.demResolution.min,e.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,e.demResolution.max)}}else this.extent=i(o(),s.spatialReference),this.demResolution={min:0,max:0}}get spatialReference(){return this.extent.spatialReference}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;for(const n of this.samplers)if(n.contains(t))return n.elevationAt(t);return c.warn(\"#elevationAt()\",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler`),this.noDataValue}}function h(e,t){const n=f(e,t.spatialReference);if(!n)return null;switch(e.type){case\"point\":x(e,n,t);break;case\"polyline\":R(e,n,t);break;case\"multipoint\":d(e,n,t)}return e}function f(e,n){if(t(e))return null;const s=e.spatialReference;if(s.equals(n))return e;const i=a(e,n);return i||c.error(`Cannot project geometry spatial reference (wkid:${s.wkid}) to elevation sampler spatial reference (wkid:${n.wkid})`),i}function x(e,t,s){e.z=n(s.elevationAt(t),0)}function R(e,t,s){y.spatialReference=t.spatialReference;const i=e.hasM&&!e.hasZ;for(let o=0;o<e.paths.length;o++){const r=e.paths[o],a=t.paths[o];for(let e=0;e<r.length;e++){const t=r[e],o=a[e];y.x=o[0],y.y=o[1],i&&(t[3]=t[2]),t[2]=n(s.elevationAt(y),0)}}e.hasZ=!0}function d(e,t,s){y.spatialReference=t.spatialReference;const i=e.hasM&&!e.hasZ;for(let o=0;o<e.points.length;o++){const r=e.points[o],a=t.points[o];y.x=a[0],y.y=a[1],i&&(r[3]=r[2]),r[2]=n(s.elevationAt(y),0)}e.hasZ=!0}const y=new l,g={remove(){}};export{m as ElevationSamplerBase,u as MultiTileElevationSampler,p as TileElevationSampler,h as updateGeometryElevation};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{isSome as t,isNone as a}from\"../../core/maybe.js\";class e{constructor(a,e=null){if(this.tile=a,t(e)){const t=a.extent;this.samplerData={pixelData:e.values,width:e.width,height:e.height,safeWidth:.99999999*(e.width-1),noDataValue:e.noDataValue,dx:(e.width-1)/(t[2]-t[0]),dy:(e.width-1)/(t[3]-t[1]),x0:t[0],y1:t[3]}}}sample(t,e){if(a(this.samplerData))return;const{safeWidth:s,width:h,pixelData:l,noDataValue:o,dx:r,dy:n,y1:d,x0:u}=this.samplerData,f=i(n*(d-e),0,s),c=i(r*(t-u),0,s),p=Math.floor(f),x=Math.floor(c),D=p*h+x,m=D+h,w=l[D],y=l[m],V=l[D+1],g=l[m+1];if(w!==o&&y!==o&&V!==o&&g!==o){const t=c-x,a=w+(V-w)*t;return a+(y+(g-y)*t-a)*(f-p)}}}function i(t,a,e){return t<a?a:t>e?e:t}export{e as ElevationTile,e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{isNone as i,isSome as o}from\"../../core/maybe.js\";import{whenOrAbort as s,throwIfAbortError as l,eachAlways as n}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as a}from\"../../core/unitUtils.js\";import r from\"../../geometry/Multipoint.js\";import c from\"../../geometry/Point.js\";import u from\"../../geometry/Polyline.js\";import{initializeProjection as h,project as p}from\"../../geometry/projection.js\";import{fromExtent as m,create as f,contains as d}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as y}from\"./ElevationSampler.js\";import{ElevationTile as T}from\"./ElevationTile.js\";class v{async queryAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const s=x.fromGeometry(i);let l=!1;o&&o.returnSampleInfo||(l=!0);const n={...R,...o,returnSampleInfo:!0},a=await this.query(e[e.length-1],s,n),r=await this._queryAllContinue(e,a,n);return r.geometry=r.geometry.export(),l&&delete r.sampleInfo,r}async query(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof x)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const s={...R,...o},l=new w(e,i.spatialReference,s),n=s.signal;return await e.load({signal:n}),await this._createGeometryDescriptor(l,i,n),await this._selectTiles(l,n),await this._populateElevationTiles(l,n),this._sampleGeometryWithElevation(l),this._createQueryResult(l,n)}async createSampler(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o};return this._createSampler(e,i,s)}async createSamplerAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],i,s);return this._createSamplerAllContinue(e,i,l,s)}async _createSampler(e,t,i,o){const s=i.signal;await e.load({signal:s});const l=t.spatialReference,n=e.tileInfo.spatialReference;l.equals(n)||(await h([{source:l,dest:n}],{signal:s}),t=p(t,n));const a=new _(e,t,i,o);return await this._selectTiles(a,s),await this._populateElevationTiles(a,s),new y(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,o){if(e.pop(),!e.length)return i;const s=i.samplers.map((e=>m(e.extent))),l=await this._createSampler(e[e.length-1],t,o,s);if(0===l.samplers.length)return i;const n=i.samplers.concat(l.samplers),a=new y(n,o.noDataValue);return this._createSamplerAllContinue(e,t,a,o)}async _queryAllContinue(e,t,i){const o=e.pop(),s=t.geometry.coordinates,l=[],n=[];for(let c=0;c<s.length;c++){const i=t.sampleInfo[c];i.demResolution>=0?i.source||(i.source=o):e.length&&(l.push(s[c]),n.push(c))}if(!e.length||0===l.length)return t;const a=t.geometry.clone(l),r=await this.query(e[e.length-1],a,i);return n.forEach(((e,i)=>{s[e].z=r.geometry.coordinates[i].z,t.sampleInfo[e].demResolution=r.sampleInfo[i].demResolution})),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i={geometry:(await e.geometry.project(e.outSpatialReference,t)).export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(i.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),i}async _createGeometryDescriptor(e,i,o){let s;const l=e.layer.tileInfo.spatialReference;if(i instanceof x?s=await i.project(l,o):(await h([{source:i.spatialReference,dest:l}],{signal:o}),s=p(i,l)),!s)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);e.geometry=x.fromGeometry(s)}async _selectTiles(e,i){const o=e.options.demResolution;if(\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e),\"number\"==typeof o)this._selectTilesClosestResolution(e);else if(\"finest-contiguous\"===o)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==o)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${o}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(i(e.layer.fullExtent))return;const t=new T(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const o=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const i=e.x,s=e.y;(i<o.xmin||i>o.xmax||s<o.ymin||s>o.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/a(e.spatialReference);let o=e.lods[0],s=0;for(let l=1;l<e.lods.length;l++){const t=e.lods[l];Math.abs(t.resolution-i)<Math.abs(o.resolution-i)&&(o=t,s=l)}return s}async _selectTilesFinestContiguous(e,t){const i=E(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,i,o){const n=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=n.tilemapCache,r=e.getTilesToFetch();try{if(a)await s(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:o})))),o);else if(await this._populateElevationTiles(e,o),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,o)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),l={},a=e.options.cache,r=e.options.noDataValue,c=i.map((async i=>{const s=`${e.layer.uid}:${i.id}:${r}`,n=o(a)?a.get(s):null,c=o(n)?n:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:r,signal:t});o(a)&&a.put(s,c),l[i.id]=new T(i,c)}));await s(n(c),t),e.populateElevationTiles(l)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const o=t.layer.tilemapCache;if(!o)return this._selectTilesAutoPrefetchUpsample(t,i);const n=t.getTilesToFetch(),a={},r=n.map((async t=>{const s={id:null,level:0,row:0,col:0,extent:f()},n=await e(o.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:i}));!1===n.ok?l(n.error):a[t.id]=s}));await s(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const o={},s=e=>{e.id in o?o[e.id]++:(o[e.id]=1,i++)},l=e=>{const t=o[e.id];1===t?(delete o[e.id],i--):o[e.id]=t-1};e.forEachTileToFetch(s,l);let n=!0;for(;n&&(n=!1,e.forEachTileToFetch((o=>{i<=e.options.maximumAutoTileRequests||(l(o),t.upsampleTile(o)&&(n=!0),s(o))}),l),n););}_selectTilesAutoFinest(e){const t=E(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let o=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?o=!0:t()})),o&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let s=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);o(e)?s=e:t.elevationTile=null}t.z=s}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=a(t.spatialReference);return e.geometry.coordinates.map((o=>{let s=-1;if(o.elevationTile&&o.elevationTile!==e.outsideExtentTile){s=t.lodAt(o.elevationTile.tile.level).resolution*i}return{demResolution:s}}))}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>this._cloneCoordinate(e))),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await h([{source:this.spatialReference,dest:e}],{signal:t});const i=new r({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),o=p(i,e);if(!o)return null;const s=this.coordinates.map(((e,t)=>{const i=this._cloneCoordinate(e),s=o.points[t];return i.x=s[0],i.y=s[1],i})),l=this.clone(s);return l.spatialReference=e,l}_cloneCoordinate(e){return{x:e.x,y:e.y,z:e.z,m:e.m,tile:null,elevationTile:null}}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map((e=>t._cloneCoordinate(e))),t._exporter=(t,i)=>{const o=e.clone(t);return o.spatialReference=i,o};else switch(e.type){case\"point\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?[{x:i.x,y:i.y,z:i.z,m:i.m}]:o?[{x:i.x,y:i.y,z:i.z}]:s?[{x:i.x,y:i.y,m:i.m}]:[{x:i.x,y:i.y}],t._exporter=(t,i)=>e.hasM?new c(t[0].x,t[0].y,t[0].z,t[0].m,i):new c(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?i.points.map((e=>({x:e[0],y:e[1],z:e[2],m:e[3]}))):o?i.points.map((e=>({x:e[0],y:e[1],z:e[2]}))):s?i.points.map((e=>({x:e[0],y:e[1],m:e[2]}))):i.points.map((e=>({x:e[0],y:e[1]}))),t._exporter=(t,i)=>e.hasM?new r({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new r(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,o=[],s=[],{hasZ:l,hasM:n}=e;let a=0;for(const e of i.paths)if(s.push([a,a+e.length]),a+=e.length,l&&n)for(const t of e)o.push({x:t[0],y:t[1],z:t[2],m:t[3]});else if(l)for(const t of e)o.push({x:t[0],y:t[1],z:t[2]});else if(n)for(const t of e)o.push({x:t[0],y:t[1],m:t[2]});else for(const t of e)o.push({x:t[0],y:t[1]});t.coordinates=o,t._exporter=(t,i)=>{const o=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),l=s.map((e=>o.slice(e[0],e[1])));return new u({paths:l,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class g{constructor(e,t){this.layer=e,this.options=t}}class w extends g{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y)}))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates)t.tile=e[t.tile.id]}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const o=i.tile;i.elevationTile||!i.tile||e[o.id]||(e[o.id]=o,t.push(o))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>t.tile=null))}}class _ extends g{constructor(e,t,i,o){super(e,i),this.type=\"extent\",this.elevationTiles=[],this.candidateTiles=[],this.fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=o}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),o=Math.min(i,e);o<0?this.candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(o)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const o=this.extent;if(i(o))return-1;for(let i=t.lods.length-1;i>=0;i--){const s=t.lods[i],l=s.resolution*t.size[0],n=s.resolution*t.size[1];if(Math.ceil(o.width/l)*Math.ceil(o.height/n)<=e)return i}return-1}allElevationTilesFetched(){return this.candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this.fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this.candidateTiles){const i=e[t.id];i&&(this.fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this.candidateTiles}forEachTileToFetch(e,t){const i=this.candidateTiles;this.candidateTiles=[],i.forEach((i=>{if(this.fetchedCandidates.has(i))return void(t&&t(i));let o=!1;e(i,(()=>o=!0)),o?t&&t(i):this.candidateTiles.push(i)})),this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},o=[];for(const l of e)i[l.id]?t&&t(l):(i[l.id]=l,o.push(l));const s=o.sort(((e,t)=>e.level-t.level));return s.filter(((e,i)=>{for(let o=0;o<i;o++)if(d(s[o].extent,e.extent))return t&&t(e),!1;return!0}))}_selectCandidateTilesCoveringExtentAt(e){this.candidateTiles.length=0;const t=this.extent;if(i(t))return;const o=this.layer.tileInfo,s=o.lods[e],l=o.tileAt(s.level,t.xmin,t.ymin),n=s.resolution*o.size[0],a=s.resolution*o.size[1],r=Math.ceil((t.xmax-l.extent[0])/n),c=Math.ceil((t.ymax-l.extent[1])/a);for(let i=0;i<c;i++)for(let e=0;e<r;e++){const t={id:null,level:l.level,row:l.row-i,col:l.col+e};o.updateTileInfo(t),this._tileIsMasked(t)||this.candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>d(t,e.extent)))}}function E(e,t){let i=e.lods.length-1;if(t>0){const o=e.lods.findIndex((e=>e.resolution<t));0===o?i=0:o>0&&(i=o-1)}return i}const R={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};export{v as ElevationQuery,x as GeometryDescriptor,v as default,E as getFinestLodIndex};\n"],"names":[],"sourceRoot":""}